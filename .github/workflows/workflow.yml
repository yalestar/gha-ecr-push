name: dpod-workflow

on:
  push:
    branches-ignore:
      - main

  pull_request:
    branches:
      - main

jobs:
  be-getting-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: action-factory/aws-secrets-manager-action@v1.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          secrets: |
            prod/lunger/dunger
          parse-json: true

      - name: Check if env variable is set after fetching secrets
        run: if [ -z ${PROD_LUNGER_DUNGER_LUNG+x} ]; then echo "PROD_LUNGER_DUNGER_LUNG is unset"; else echo "PROD_LUNGER_DUNGER_LUNG is set to '$PROD_LUNGER_DUNGER_LUNG'"; fi

  aws-ecr-config:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        id: git-checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Amazon ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build tag and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ypy
          IMAGE_TAG: ${{ github.sha }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG